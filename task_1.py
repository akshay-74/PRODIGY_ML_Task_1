# -*- coding: utf-8 -*-
"""task_1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1f0m0DsnfqGEnwMkgQ5F-9ANjZ6Hg7eqe
"""

!pip install pandas

!pip install numpy

!pip install scikit-learn

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt

# Mount Google Drive (if using Colab)
from google.colab import drive
drive.mount('/content/drive')

# Load the dataset
file_path = '/content/drive/MyDrive/house.csv'  # Adjust the path if necessary
data = pd.read_csv(file_path)

# Drop rows with missing values (if any)
data = data.dropna()

# Features (X) and target (y)
X = data[['square_footage', 'bedrooms', 'bathrooms']]
y = data['price']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize the model
model = LinearRegression()

# Train the model
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
coefficients = model.coef_
intercept = model.intercept_

print(f'Mean Squared Error: {mse}')
print(f'R^2 Score: {r2}')
print(f'Coefficients: {coefficients}')
print(f'Intercept: {intercept}')

# Plotting the results
plt.scatter(y_test, y_pred)
plt.xlabel('Actual Prices')
plt.ylabel('Predicted Prices')
plt.title('Actual vs Predicted Prices')
plt.show()